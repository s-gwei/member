<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.member.mapper.MeRechargeRecordMapper">
    <resultMap id="CaseResultMap" type="org.jeecg.modules.member.vo.MeRechargeRecordVo">
        <result column="id" property="id"/>
        <result column="member_id" property="memberId"/>
        <result column="create_time" property="createTime"/>
        <result column="employee_id" property="employeeId"/>
        <result column="memberName" property="memberName"/>
        <result column="employeeName" property="employeeName"/>
        <result column="recharge_mode" property="rechargeMode"/>
    </resultMap>


    <resultMap id="BaseResultMap" type="org.jeecg.modules.member.entity.RecordVo">
        <result column="todayIncome" property="todayIncome"/>
        <result column="salesToday" property="salesToday"/>
        <result column="todayNumber" property="todayNumber"/>
        <result column="monthIncome" property="monthIncome"/>
    </resultMap>


    <resultMap id="DaseResultMap" type="org.jeecg.modules.member.entity.SaleCur12Vo">
        <result column="month" property="month"/>
        <result column="total" property="total"/>
    </resultMap>
    <!-- 根据用户名查询 -->
    <select id="queryPageList" resultMap="CaseResultMap">
SELECT
	me_recharge_record.*,me_member.`name` as memberName,me_mployee.`name` as employeeName
FROM
	me_recharge_record left join
	me_member  on  me_recharge_record.member_id = me_member.id
	left join
	me_mployee on me_recharge_record.employee_id=me_mployee.id
	where 1=1
    <if test="meRechargeRecordVo.memberName != null  and  meRechargeRecordVo.memberName  != '' " >
        and me_member.name like '%${meRechargeRecordVo.memberName}%'
    </if>
    <if test="startTime != null  and  startTime != '' " >
        and (me_recharge_record.create_time between  #{startTime} and #{endTime})
    </if>
    </select>


    <select id="recordInfo" resultMap="BaseResultMap">
                SELECT
                    *
                FROM
                    (
                SELECT
                    recharge_amount + consumt_amount AS todayIncome
                FROM
                    ( SELECT sum( recharge_amount ) AS recharge_amount FROM me_recharge_record WHERE to_days( create_time ) = to_days( now( ) ) ) a,
                    (
                SELECT
                    sum( consumt_amount ) AS consumt_amount
                FROM
                    consumpt_record
                WHERE
                    to_days( create_time ) = to_days( now( ) )
                    AND member_id IS NULL
                    AND consumt_way != "会员"
                    ) b
                    ) c,
                    ( SELECT sum( consumt_amount ) AS salesToday FROM consumpt_record WHERE to_days( create_time ) = to_days( now( ) ) ) d,
                    ( SELECT count( 1 ) AS todayNumber FROM consumpt_record WHERE to_days( create_time ) = to_days( now( ) ) ) e,
                    (
                SELECT
                    recharge_amount + consumt_amount AS monthIncome
                FROM
                    ( SELECT sum( recharge_amount ) AS recharge_amount FROM me_recharge_record WHERE DATE_FORMAT( create_time, '%Y%m' ) = DATE_FORMAT( CURDATE( ), '%Y%m' ) ) f,
                    (
                SELECT
                    sum( consumt_amount ) AS consumt_amount
                FROM
                    consumpt_record
                WHERE
                    DATE_FORMAT( create_time, '%Y%m' ) = DATE_FORMAT( CURDATE( ), '%Y%m' )
                    AND member_id IS NULL
                    AND consumt_way != "会员"
                    ) g
                    ) h

    </select>

    <insert id="dropView">
            DROP VIEW IF EXISTS `past_12_month_view`;
    </insert>
    <insert id="createView">
            CREATE
            VIEW `past_12_month_view` AS
                SELECT DATE_FORMAT(CURDATE(), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 2 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 3 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 4 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 5 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 6 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 7 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 8 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 9 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 10 MONTH), '%Y-%m') AS `month`
                UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 11 MONTH), '%Y-%m') AS `month`

    </insert>

    <select id="queryCur12Total" resultMap="DaseResultMap">
            SELECT
                c.`MONTH`,
                c.total + d.total AS total
            FROM
                (
            SELECT
                v.MONTH,
                sum( ifnull( a.total, 0 ) ) AS total
            FROM
                past_12_month_view v
                LEFT JOIN (
            SELECT
                DATE_FORMAT( t.create_time, '%Y-%m' ) MONTH,
                sum( t.recharge_amount ) total
            FROM
                me_recharge_record t
            WHERE
                DATE_FORMAT( create_time, '%Y-%m' ) > DATE_FORMAT( date_sub( curdate( ), INTERVAL 12 MONTH ), '%Y-%m' )
            GROUP BY
            MONTH
                ) a ON v.MONTH = a.MONTH
            GROUP BY
                v.MONTH
                ) c,
                (
            SELECT
                v.MONTH,
                sum( ifnull( a.total, 0 ) ) AS total
            FROM
                past_12_month_view v
                LEFT JOIN (
            SELECT
                DATE_FORMAT( t.create_time, '%Y-%m' ) MONTH,
                sum( t.consumt_amount ) total
            FROM
                consumpt_record t
            WHERE
                DATE_FORMAT( create_time, '%Y-%m' ) > DATE_FORMAT( date_sub( curdate( ), INTERVAL 12 MONTH ), '%Y-%m' )
                AND member_id IS NULL
                AND consumt_way != "会员"
            GROUP BY
            MONTH
                ) a ON v.MONTH = a.MONTH
            GROUP BY
                v.MONTH
                ) d
            WHERE
                c.MONTH = d.MONTH
    </select>
</mapper>